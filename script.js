// ====================================================================================
// PASO 1: IMPORTACIONES (Sin cambios)
// ====================================================================================
import { initializeApp } from "https://www.gstatic.com/firebasejs/9.23.0/firebase-app.js";
import { getAuth, signInWithCustomToken, onAuthStateChanged, signOut } from "https://www.gstatic.com/firebasejs/9.23.0/firebase-auth.js";

// ====================================================================================
// PASO 2: CONFIGURACI√ìN (Sin cambios)
// ====================================================================================
const firebaseConfig = {
    apiKey: "AIzaSyD_SCyO4s-fZZS2qBTKEqAFiWP3IPD97Uo",
    authDomain: "plataforma-escala.firebaseapp.com",
    projectId: "plataforma-escala",
    storageBucket: "plataforma-escala.appspot.com",
    messagingSenderId: "917193676993",
    appId: "1:917193676993:web:da3a51e59246bd917c1c40"
};

const app = initializeApp(firebaseConfig);
const auth = getAuth(app);

// ====================================================================================
// PASO 3: SCRIPT "GUARDI√ÅN" CON LOGS DE DEPURACI√ìN üïµÔ∏è‚Äç‚ôÇÔ∏è
// ====================================================================================
(function() {
    console.log("üöÄ Script Guardi√°n INICIADO a las " + new Date().toLocaleTimeString());
    const params = new URLSearchParams(window.location.search);
    const token = params.get('token');

    if (token) {
        console.log("‚úÖ Token encontrado en la URL:", token.substring(0, 30) + "...");
        console.log("‚è≥ Intentando iniciar sesi√≥n con signInWithCustomToken...");

        signInWithCustomToken(auth, token)
            .then((userCredential) => {
                console.log("üëç √âXITO: signInWithCustomToken funcion√≥. El usuario es:", userCredential.user.uid);
                const newUrl = window.location.protocol + "//" + window.location.host + window.location.pathname;
                window.history.replaceState({ path: newUrl }, '', newUrl);
            })
            .catch((error) => {
                // ESTE ES EL LOG M√ÅS IMPORTANTE
                console.error("üî• ERROR: signInWithCustomToken fall√≥. Detalles del error:", error);
                console.error("C√≥digo de Error:", error.code);
                console.error("Mensaje de Error:", error.message);
                
                console.log(" Redirecting to https://elprofecaicedo.com due to error.");
                // Descomenta la siguiente l√≠nea si quieres que la redirecci√≥n funcione
                // window.location.href = 'https://elprofecaicedo.com';
            });
    } else {
        console.log("üü° No se encontr√≥ ning√∫n token en la URL.");
    }
})();


// ====================================================================================
// PASO 5: LISTENER PRINCIPAL DEL ESTADO DE AUTENTICACI√ìN CON LOGS
// ====================================================================================
console.log("üö¶ Configurando listener onAuthStateChanged...");
onAuthStateChanged(auth, user => {
    console.log("üîÑ onAuthStateChanged se dispar√≥ a las " + new Date().toLocaleTimeString());
    if (user) {
        console.log("‚úÖ ESTADO: Usuario autenticado. UID:", user.uid);
        // El resto de tu l√≥gica de UI va aqu√≠
        // updateUI(user);
    } else {
        console.log("‚ùå ESTADO: No hay usuario.");
        if (!window.location.search.includes('token')) {
            console.log(" Redirecting to https://elprofecaicedo.com because there is no user and no token.");
            // Descomenta la siguiente l√≠nea si quieres que la redirecci√≥n funcione
            // window.location.href = 'https://elprofecaicedo.com';
        }
    }
});

// Aqu√≠ ir√≠a el resto de tu c√≥digo para la UI (DOMContentLoaded, updateUI, etc.)
// Por ahora, lo m√°s importante son los logs del guardi√°n.
// ...